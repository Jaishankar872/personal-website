{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to Jaishankar's website.</p>"},{"location":"m181_lcr/Firmware-Design/","title":"Software Frontend Driver","text":""},{"location":"m181_lcr/Firmware-Design/#software-flow-diagram","title":"Software Flow Diagram","text":""},{"location":"m181_lcr/Firmware-Design/#signal-generator-dac","title":"Signal Generator (DAC)","text":"<p>The signal generator uses an R-2R ladder DAC connected to digital pins PB0 to PB7. Key features include:</p> <ul> <li>8-bit resolution, providing 256 steps.</li> <li>A circular buffer for sine wave data, applied via interrupts.</li> </ul>"},{"location":"m181_lcr/Firmware-Design/#timer-1","title":"Timer 1","text":"<p>Timer 1 is responsible for generating the sine wave through digital pins PB0 to PB7. Timer Specifications:</p> <ul> <li>Prescaler: 2  </li> <li>Interval: \\(\\frac{1}{frequency} \\times \\frac{1}{100}\\) </li> </ul>"},{"location":"m181_lcr/Firmware-Design/#voltage-current-measurement","title":"Voltage &amp; Current Measurement","text":""},{"location":"m181_lcr/Firmware-Design/#pin-description","title":"Pin Description","text":""},{"location":"m181_lcr/Firmware-Design/#vi-pa7-pin","title":"VI - PA7 Pin","text":"Measure VI Voltage LOW Current HIGH"},{"location":"m181_lcr/Firmware-Design/#gs-pa6-pin","title":"GS - PA6 Pin","text":"<ul> <li>LOW: <li>HIGH: Gain is unity  </li>"},{"location":"m181_lcr/Firmware-Design/#adc-pa0-pa1-pins","title":"ADC - PA0, PA1 Pins","text":"<ul> <li>PA0: Voltage and current measurement.  </li> <li>PA1: Automatic Factor Correction (AFC).  </li> </ul>"},{"location":"m181_lcr/Firmware-Design/#measurement-mode-handling","title":"Measurement Mode Handling","text":"<ul> <li>Four possible modes are configured using the VI and GS pins.  </li> <li>To ensure accurate measurements, the mode is set with a time gap before measurement.  </li> <li>A total of 8 modes are cycled via Timer 2 interrupts.</li> </ul>"},{"location":"m181_lcr/Firmware-Design/#timer-2","title":"Timer 2","text":"<p>Timer 2 toggles the VI measurement switch. Timer Specifications: - Prescaler: 72000 - Interval: 250ms  </p> <p>Community Support: ADC Timer Implementation</p>"},{"location":"m181_lcr/Firmware-Design/#adc-configuration","title":"ADC Configuration","text":"<p>The ADC operates in dual mode for PA0 (ADC0) and PA1 (ADC1). Key features include:</p> <ul> <li>Timer 3 triggers ADC sampling via TRGO.  </li> <li>Direct Memory Access (DMA) is used to offload CPU load.  </li> <li>DMA overflow interrupts transfer ADC sample data to specific arrays.</li> </ul>"},{"location":"m181_lcr/Firmware-Design/#timer-3","title":"Timer 3","text":"<p>Timer 3 triggers ADC measurements. Timer Specifications: - Prescaler: 8 - Interval: \\(\\frac{1}{sampling frequency}\\) </p>"},{"location":"m181_lcr/Firmware-Design/#display","title":"Display","text":"<p>The SSD1306 display (128x64 resolution) is connected via I2C using PA4 (SCL) and PA3 (SDA).  </p>"},{"location":"m181_lcr/Firmware-Design/#implementation","title":"Implementation","text":"<ul> <li>PA3 and PA4 do not natively support I2C on this MCU. A software (bit-banging) I2C interface is implemented by modifying the tobajer/i2cbitbang library.  </li> <li>The display is controlled using a modified library, 4ilo/ssd1306-stm32HAL, which is a fork of afiskon/stm32-ssd1306.  </li> </ul> <p>Community Support: Display with Non-Standard I2C Pins</p>"},{"location":"m181_lcr/Firmware-Design/#miscellaneous-section","title":"Miscellaneous Section","text":""},{"location":"m181_lcr/Firmware-Design/#user-buttons","title":"User Buttons","text":"<ul> <li>PB13: Hold  </li> <li>PB14: Serial/Parallel (S/P) mode  </li> <li>PB15: RCL mode</li> </ul>"},{"location":"m181_lcr/Hardware-Design/","title":"Hardware Design","text":""},{"location":"m181_lcr/Hardware-Design/#core-concept","title":"Core Concept","text":"<p>The M181 LCR Meter operates by applying a fixed sine wave voltage to the Device Under Test (DUT) through a series resistor. It measures the voltage drop (V), current (I), and the phase difference between V and I to calculate the complex impedance. Using this impedance, the following parameters of the DUT can be derived:</p> <ul> <li>Inductance (L)</li> <li>Capacitance (C)</li> <li>Resistance (R)</li> </ul> <p>Additionally, the Dissipation Factor (D) and Equivalent Series Resistance (ESR) can also be calculated.</p> Core Concept Implemented Method"},{"location":"m181_lcr/Hardware-Design/#capability","title":"Capability","text":"<p>The manufacturer (JYETech) specifies the following capabilities:</p> <p>Image source: JYETech M181 LCR Meter</p>"},{"location":"m181_lcr/Hardware-Design/#design-files","title":"Design Files","text":"<ul> <li>Schematics File </li> <li>Assembly Guide</li> </ul>"},{"location":"m181_lcr/Hardware-Design/#block-wise-explanation","title":"Block-wise Explanation","text":""},{"location":"m181_lcr/Hardware-Design/#power-tree","title":"Power Tree","text":"<ol> <li>USB input voltage: 5V  </li> <li>Charge pump (TPS60403 IC) generates dual voltage: \u00b15V  </li> <li>LDO regulates voltage to 3.3V  </li> </ol>"},{"location":"m181_lcr/Hardware-Design/#signal-generator-dac","title":"Signal Generator (DAC)","text":"<p>To generate a sine wave with a fixed frequency, a DAC is required. Since the MCU lacks an inbuilt DAC, an external R-2R ladder DAC is used.</p> <p>Detailed explanation: Digital-to-Analog Conversion (R-2R DAC)</p> <ul> <li>R-2R ladder DAC is implemented using digital pins (8-bit resolution).  </li> <li>The DAC output is connected to a voltage follower (U4C).  </li> <li>Two RC low-pass filters (\\(F_c = 723Hz\\)) are connected to smooth the signal.  </li> <li>The output is tapped for Automatic Factor Correction (AFC) and connected to the MCU's ADC.  </li> <li>Further, an RC high-pass filter (\\(F_c = 312Hz\\)) blocks DC, followed by another voltage follower (U4D) to provide the final output.</li> </ul>"},{"location":"m181_lcr/Hardware-Design/#trans-impedance-amplifier","title":"Trans-impedance Amplifier","text":"<p>This section converts the current (\\(I_X\\)) through the DUT into a voltage (\\(V_O\\)) using the formula: $$ V_O = I_X \\times R_F $$</p>"},{"location":"m181_lcr/Hardware-Design/#kelvin-4-wire-measurement","title":"Kelvin (4-wire) Measurement","text":"<ul> <li>Two dedicated wires measure the voltage across the DUT.  </li> <li>A switch toggles between voltage and current measurement modes.</li> </ul> <p>Image source: Kelvin Resistance Measurement</p> <p>Note: Calibration is required to compensate for probe errors.</p>"},{"location":"m181_lcr/Hardware-Design/#amplifier-with-gain-controller-section","title":"Amplifier with Gain Controller Section","text":"<ul> <li>Instrument amplifiers (U2A, U2C, U2D) with a fixed gain of 5.25. </li> <li>The gain is selectable via the GS pin, allowing unity gain or attenuation by a factor of \\(\\frac{1}{101}\\).</li> <li>Next it is connected to high-pass filter which DC block signal.  </li> <li>A non-inverting amplifier with a gain of 100 adds an offset voltage (-1.77V) and connects to the MCU's ADC.  </li> </ul> \\[ V_{out}=V_{in}.(1+\\frac{R_1}{R_2}+\\frac{R_1}{R_3}) - V_{offset} .(\\frac{R_1}{R_3})  \\] <p>Here \\(R_1 = R_3 = 5.1\\)kohm, \\(R_2 = 51\\)ohm, \\(V_{offset}=-1.77\\)V</p> \\[ V_{out}=102\\times V_{in} + 1.77 V  \\]"},{"location":"m181_lcr/Hardware-Design/#miscellaneous-section","title":"Miscellaneous Section","text":"<ol> <li>I2C 128x64 resolution SSD1306 display.  </li> <li>Three push buttons for user input/control.  </li> <li>SWD signals terminated at the J3 header.  </li> <li>UART signals connected to the CH340N USB serial interface.</li> </ol>"},{"location":"m181_lcr/Home/","title":"Introduction","text":"<p>This document provides an overview of the M181 LCR Meter GitHub repository.</p> <p>Goal is to develop only the Firmware for M181 LCR Meter made by JyeTech. Hope to provide understanding in basics of LCR Meter.</p>"},{"location":"m181_lcr/Home/#hardware-m181-lcr-meter","title":"Hardware - M181 LCR Meter","text":"<ul> <li>Official product page link here</li> <li>I have purchased from Banggood, buying link is here</li> </ul>"},{"location":"m181_lcr/Home/#setup-for-programming","title":"Setup for programming","text":"<ul> <li>Programmer \u2192 Raspberry pi debug probe (**modified)</li> <li>Interface  \u2192 SWD</li> <li>IDE        \u2192 PlatformIO</li> <li>Framework  \u2192 STM32Cube</li> </ul> <p>Note: Still this firmware under development.</p>"},{"location":"m181_lcr/Home/#tasks-to-be-completed","title":"Tasks to be completed","text":"<ul> <li> Zero Padding function (ADC offset)</li> <li> Auto calibration option</li> <li> Improve the phase difference calculation</li> <li> Fix issue in missing to capture the button press input</li> <li> Correct the current waveform crop issue in auto gain selection. </li> <li> Add option for Parallel calculation (\\(C_p\\),\\(L_p\\)) </li> </ul>"},{"location":"m181_lcr/Home/#context","title":"Context","text":"<p>Explore the following sections for detailed information:</p> <ul> <li> <p>Hardware Description   Learn about the hardware design and components of the M181 LCR Meter.</p> </li> <li> <p>Frontend Driver   Understand the firmware design and driver implementation.</p> </li> <li> <p>Signal Processing   Dive into the signal processing techniques used in the system.</p> </li> <li> <p>Impedance Calculation   Discover the methods for calculating impedance with the M181 LCR Meter.</p> </li> </ul>"},{"location":"m181_lcr/Home/#credits","title":"Credits","text":"<ul> <li>JYETech</li> <li>Maximilian Gerhardt</li> </ul>"},{"location":"m181_lcr/Impedance-Calculation/","title":"Impedance Calculation","text":""},{"location":"m181_lcr/Impedance-Calculation/#basic-terms","title":"Basic Terms","text":""},{"location":"m181_lcr/Impedance-Calculation/#complex-impedance","title":"Complex Impedance","text":"<ul> <li>Polar Form: \\(\\displaystyle\\vec{Z} = Z \\angle\\theta\\) </li> <li>Cartesian Form: \\(Z = R + jX\\) </li> </ul> <p>Where: - \\(\\vec{Z}\\) \u2192 Impedance vector in polar form. - \\(Z\\) \u2192 Magnitude of the impedance. - \\(\\theta\\) \u2192 Phase angle. - \\(R\\) \u2192 Resistance (real part). - \\(X\\) \u2192 Reactance (imaginary part).  </p>"},{"location":"m181_lcr/Impedance-Calculation/#conversion-between-forms","title":"Conversion Between Forms","text":""},{"location":"m181_lcr/Impedance-Calculation/#polar-cartesian-form","title":"Polar \u2192 Cartesian Form","text":"<ul> <li>Resistance: \\(R = |Z| \\cdot \\cos \\theta\\) </li> <li>Reactance: \\(X = |Z| \\cdot \\sin \\theta\\) </li> </ul>"},{"location":"m181_lcr/Impedance-Calculation/#cartesian-polar-form","title":"Cartesian \u2192 Polar Form","text":"<ul> <li>Magnitude: \\(Z = \\sqrt{R^2 + X^2}\\) </li> <li>Phase Angle: \\(\\angle \\theta = \\tan^{-1}\\left(\\frac{X}{R}\\right)\\) </li> </ul>"},{"location":"m181_lcr/Impedance-Calculation/#typical-equations-for-lcr-meters","title":"Typical Equations for LCR Meters","text":"<p>LCR meters measure the impedance by analyzing the current (\\(I\\)) flowing through the DUT and the voltage (\\(V\\)) across its terminals. These meters calculate not only the ratio of RMS values of \\(I\\) and \\(V\\) but also the phase difference between their waveforms.</p>"},{"location":"m181_lcr/Impedance-Calculation/#impedance-calculation","title":"Impedance Calculation","text":"\\[ \\vec{Z} = \\frac{|V| \\angle \\theta_V}{|I| \\angle \\theta_I} = \\frac{|V|}{|I|} \\angle (\\theta_V - \\theta_I) = |Z| \\angle\\theta \\]"},{"location":"m181_lcr/Impedance-Calculation/#reactance","title":"Reactance","text":"<ul> <li>Capacitive Reactance: \\(X_C = \\frac{1}{2\\pi fC}\\) </li> <li>Inductive Reactance: \\(X_L = 2\\pi fL\\) </li> </ul> <p>References: 1. LCR Meter Basic Measurement Principles 2. Typical Equations for LCR Meters 3. Complex Impedance (Wikipedia)</p>"},{"location":"m181_lcr/Impedance-Calculation/#equivalent-circuit-model","title":"Equivalent Circuit Model","text":""},{"location":"m181_lcr/Impedance-Calculation/#calibration","title":"Calibration","text":"<p>Calibration involves performing open and short corrections to ensure accurate measurements.  </p> <p>Details will be added soon...</p>"},{"location":"m181_lcr/Signal-Processing/","title":"Signal Processing","text":""},{"location":"m181_lcr/Signal-Processing/#base-concept","title":"Base Concept","text":"<p>Calculation &amp; data processing done below order,</p> <ol> <li> <p>Remove the DC offset in all signal.</p> </li> <li> <p>RMS Amplitude of voltage, current signal.</p> </li> <li> <p>Calculate RMS Voltage, Current</p> </li> <li> <p>With modulation method, calculate the phase</p> </li> <li> <p>Now derive the complex impedance value</p> </li> </ol> <p>Reference from TI TIDA-060029</p>"},{"location":"m181_lcr/Signal-Processing/#amplitude-phase-calculation","title":"Amplitude &amp; Phase calculation","text":""},{"location":"m181_lcr/Signal-Processing/#rms-value-voltage-current","title":"RMS value - Voltage &amp; Current","text":"<p>RMS(Root Mean Square) is the square root of the mean square of a set of numbers or a continuous function $$ x_\\text{RMS} = \\sqrt{ \\frac{1}{n} \\left( {x_1}^2 + {x_2}^2 + \\cdots + {x_n}^2 \\right) }. $$</p>"},{"location":"m181_lcr/Signal-Processing/#synchronous-demodulation-phase","title":"Synchronous Demodulation - Phase","text":"<p>The voltages are acquired using a two channel differential ADC and processed in the following form. Followed below steps</p> <ol> <li> <p>Modulation of the signal by multiplying the signal with a unity magnitude square wave of 0 degree phase and taking the average of the resulting signal (\\(V_1\\)).      </p> </li> <li> <p>Modulation of the signal by multiplying the signal with a unity magnitude square wave of 90 degree phase and taking the average of the resulting signal (\\(V_2\\)).      </p> </li> </ol> <p>$$ \\alpha = \\tan^{-1} (\\frac{V_2}{V_1}) $$  phase \u2018\\(\\alpha\\)\u2019 of any signal is estimated with respect to the reference signal.</p>"}]}